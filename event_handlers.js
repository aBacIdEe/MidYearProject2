const upKey = "w";
const leftKey = "a";
const downKey = "s";
const rightKey = "d";
let curRoom = 0;
let aboutToChange  =-1
var audio = new Audio("music/1.mp3");
audio.volume = 0.3;
var songNum = 1;
var isStarting = 0;
var shiftX = 0;
var shiftY = 0;
var size = 0;
let boomsound = new Audio("music/BOOM3.mp3");
// [x,y,]
const rooms = [
    
    // ROOM 1
    [2,7,25,15,
        [
        [-1,-1,-1],
        [10,1,0],
        [10,2,0],
        [10,3,0],
        [10,4,0],
        [10,5,0],
        [10,6,0],
        [10,8,0],
        [10,9,0],
        [10,10,0],
        [10,11,0],
        [10,12,0],
        [10,13,0],
        [9,6,0],
        [8,6,0],
        [8,8,0],
        [9,8,0],
        [10,8,0],

        [15,4,0], [16,4,0],[17,4,0],[18,4,0],[19,4,0],
        [15,5,0],
        [15,6,0],
        [15,8,0],
        [15,7,0],
        [15,9,0],
        [15,10,0], [16,10,0],[17,10,0],[18,10,0],[19,10,0],

        [10,8,0],
    
        [20,7,1,1],
        
        // [20,7,2],
        // [13,13,2],
    
    // corner walls for turning
        [11,1,0],[11,2,0],[12,1,0],
        [23,1,0],[23,2,0],[22,1,0],
        [11,13,0],[11,12,0],[12,13,0],
        [23,13,0],[23,12,0],[22,13,0],
      //  [23,7,0], [13,7,0],
      [13,2,2], [13,12,2.2], [22,7,2.1],[12,7,2.3], [21,2,2], [21,12,2.2],

    ]
    ], 

    // ROOM 2
    [1, 5, 19, 11,
        [
            [-1,-1,-1],
        [3, 1, 0], 
        [4, 1, 0],
        [5, 1, 0],
        [6, 1, 0],
        [7, 1, 0],
        [8, 1, 0],
        [9, 1, 0],
        [10, 1, 0],
        [11, 1, 0],
        [12, 1, 0],
        [13, 1, 0],
        [14, 1, 0],
        [15, 1, 0],
        [16, 1, 0],
        [17, 1, 0],

        [3, 2, 0], 
        [4, 2, 0],
        [5, 2, 0],
        //[6, 2, 0],
        //[7, 2, 0],
        //[8, 2, 0],
        //[9, 2, 0],
        [10, 2, 0],
        [11, 2, 0],
        //[12, 2, 0],
        //[13, 2, 0],
        //[14, 2, 0],
        //[15, 2, 0],
        [16, 2, 0],
        [17, 2, 0],

        [3, 3, 0], 
        [4, 3, 0],
        [5, 3, 0],
        //[6, 3, 0],
        [7, 3, 0],
        [8, 3, 0],
        //[9, 3, 0],
        [10, 3, 0],
        [11, 3, 0],
        //[12, 3, 0],
        [13, 3, 0],
        [14, 3, 0],
        //[15, 3, 0],
        [16, 3, 0],
        [17, 3, 0],

        [3, 4, 0], 
        [4, 4, 0],
        [5, 4, 0],
        //[6, 4, 0],
        [7, 4, 0],
        [8, 4, 0],
        //[9, 4, 0],
        [10, 4, 0],
        [11, 4, 0],
        //[12, 4, 0],
        [13, 4, 0],
        [14, 4, 0],
        //[15, 4, 0],
        [16, 4, 0],
        [17, 4, 0],

        [3, 5, 0],
        [4, 5, 0],
        
        [3, 6, 0], 
        [4, 6, 0],
        [5, 6, 0],
        //[6, 6, 0],
        [7, 6, 0],
        [8, 6, 0],
        //[9, 6, 0],
        [10, 6, 0],
        [11, 6, 0],
        //[12, 6, 0],
        [13, 6, 0],
        [14, 6, 0],
        //[15, 6, 0],
        [16, 6, 0],
        [17, 6, 0],

        [3, 7, 0], 
        [4, 7, 0],
        [5, 7, 0],
        //[6, 7, 0],
        [7, 7, 0],
        [8, 7, 0],
        //[9, 7, 0],
        [10, 7, 0],
        [11, 7, 0],
        //[12, 7, 0],
        [13, 7, 0],
        [14, 7, 0],
        //[15, 7, 0],
        [16, 7, 0],
        [17, 7, 0],

        //[3, 8, 0], 
        //[4, 8, 0],
        //[5, 8, 0],
        //[6, 8, 0],
        [7, 8, 0],
        [8, 8, 0],
        //[9, 8, 0],
        //[10, 8, 0],
        //[11, 8, 0],
        //[12, 8, 0],
        [13, 8, 0],
        [14, 8, 0],
        //[15, 8, 0],
        //[16, 8, 0],
        //[17, 8, 0],

        [3, 9, 0], 
        [4, 9, 0],
        [5, 9, 0],
        [6, 9, 0],
        [7, 9, 0],
        [8, 9, 0],
        [9, 9, 0],
        [10, 9, 0],
        [11, 9, 0],
        [12, 9, 0],
        [13, 9, 0],
        [14, 9, 0],
        [15, 9, 0],
        [16, 9, 0],
        [17, 9, 0],
        [17, 5, 3.2],
        [16, 5, 2.2],
        [17, 8, 1, 2]
        
    ]
    

    ], 
    // Room 2.5 to introduce blocking lasers
    [1, 5, 19, 11,
        [
            [-1,-1,-1],

        [4,1,0],
       

        [14,1,0],
      

        // enemies

        [9,1,3.1],
        [1,2,0],
        [1,3,4],
        [1,4,0],

        [17,2,0],
        [17,3,4.2],
        [17,4,0],
       

        
        //[5,11,2.3],
        //[14,10,2.1],

        // goal
        [17,5,1,3]]
    ],
    // ROOM 3
    [1, 4, 16, 13,
        [
            [-1,-1,-1],

            [4,1,0],
            [4,11,0],

            [14,1,0],
            [14,11,0],

            // enemies

            [7,4,3.1],
            [11,4,3.2],
            [7,8,3.0],
            [11,8,3.3],

            [5,11,2.3],
            //[14,10,2.1],

            // goal
            [9,6,1,4],
        ]
    ],
    // room idk at this point
    [1, 1, 17, 13,
        [
            [-1,-1,-1],

           

            // enemies
           
            
            [4,4,3.2],
            [4,4,3.3],
            [4,8,3.3],
            [4,8,3.1],
            [4,8,3.2],
            [4,8,3],
            [8,4,3.1],
            [8,4,3.2],
            [8,4,3.3],
            [8,8,3.0],
            [8,8,3.1],
            [12,4,3.3],
            [12,4,3.1],
            [12,4,3.2],
            [12,4,3],
            [12,8,3.0],
            [12,8,3.1],

            [6,2,4.2],
            [2,6,4.2],
            [10,10,4.2],

            [6,6,4.3],
            [2,10,4.3],
            [10,6,4.3],
            [14,10,4.3],
            //[14,10,2.1],

            // goal
            [15,11,1,5],
        ]
    ],
    [1, 1, 57, 53,
        [
            [-1,-1,-1],

           

            // enemies
           
            
            [4,4,3.2],
            [4,4,3.3],
            [4,8,3.3],
            [4,8,3.2],
            [4,8,3],
            [4,12,3.2],
            [4,12,3.3],
            [4,16,3.3],
            [4,16,3.2],
            [4,16,3],
            [4,20,3.2],
            [4,20,3.3],
            [4,24,3.3],
            [4,24,3.2],
            [4,24,3],
            [4,28,3.2],
            [4,28,3.3],
            [4,32,3.3],
            [4,32,3.2],
            [4,32,3],
            [4,36,3.2],
            [4,36,3.3],
            [4,40,3.3],
            [4,40,3.2],
            [4,40,3],
            [4,44,3.2],
            [4,44,3.3],
            [4,48,3.3],
            [4,48,3.2],
            [4,48,3],
            [4,48,3.1],
           
           

            [8,4,3.1],
            [8,4,3.2],
            [8,4,3.3],
            [8,8,3.0],
            [8,12,3.2],
            [8,12,3.3],
            [8,16,3.3],
            //[4,16,3.2],
            [8,16,3],
            [8,20,3.2],
            [8,20,3.3],
            [8,24,3.3],
            // [4,24,3.2],
            [8,24,3],
            [8,28,3.2],
            [8,28,3.3],
            [8,32,3.3],
            // [4,32,3.2],
            [8,32,3],
            [8,36,3.2],
            [8,36,3.3],
            [8,40,3.3],
            // [4,40,3.2],
            [8,40,3],
            [8,44,3.2],
            [8,44,3.3],
            [8,48,3.3],
            // [4,48,3.2],
            [8,48,3],
            [8,48,3.1],
            [12,4,3.1],
            [12,4,3.2],
            [12,4,3.3],
            [12,8,3.0],
            [12,12,3.2],
            [12,12,3.3],
            [12,16,3.3],
            //[4,16,3.2],
            [12,16,3],
            [12,20,3.2],
            [12,20,3.3],
            [12,24,3.3],
            // [4,24,3.2],
            [12,24,3],
            [12,28,3.2],
            [12,28,3.3],
            [12,32,3.3],
            // [4,32,3.2],
            [12,32,3],
            [12,36,3.2],
            [12,36,3.3],
            [12,40,3.3],
            // [4,40,3.2],
            [12,40,3],
            [12,44,3.2],
            [12,44,3.3],
            [12,48,3.3],
            // [4,48,3.2],
            [12,48,3],
            [12,48,3.1],
            [16,4,3.1],
            [16,4,3.2],
            [16,4,3.3],
            [16,8,3.0],
            [16,12,3.2],
            [16,12,3.3],
            [16,16,3.3],
            //64,16,3.2],
            [16,16,3],
            [16,20,3.2],
            [16,20,3.3],
            [16,24,3.3],
            //6[4,24,3.2],
            [16,24,3],
            [16,28,3.2],
            [16,28,3.3],
            [16,32,3.3],
            //6[4,32,3.2],
            [16,32,3],
            [16,36,3.2],
            [16,36,3.3],
            [16,40,3.3],
            //[4,40,3.2],
            [16,40,3],
            [16,44,3.2],
            [16,44,3.3],
            [16,48,3.3],
            // [4,48,3.2],
            [16,48,3],
            [16,48,3.1],
            [20,4,3.1],
            [20,4,3.2],
            [20,4,3.3],
            [20,8,3.0],
            [20,12,3.2],
            [20,12,3.3],
            [20,16,3.3],
            //64,16,3.2],
            [20,16,3],
            [20,20,3.2],
            [20,20,3.3],
            [20,24,3.3],
            //6[4,24,3.2],
            [20,24,3],
            [20,28,3.2],
            [20,28,3.3],
            [20,32,3.3],
            //6[4,32,3.2],
            [20,32,3],
            [20,36,3.2],
            [20,36,3.3],
            [20,40,3.3],
            //[4,40,3.2],
            [20,40,3],
            [20,44,3.2],
            [20,44,3.3],
            [20,48,3.3],
            // [4,48,3.2],
            [20,48,3],
            [20,48,3.1],
            // [8,8,3.1],
            [24,4,3.1],
            [24,4,3.2],
            [24,4,3.3],
            [24,8,3.0],
            [24,12,3.2],
            [24,12,3.3],
            [24,16,3.3],
            //64,16,3.2],
            [24,16,3],
            [24,20,3.2],
            [24,20,3.3],
            [24,24,3.3],
            //6[4,24,3.2],
            [24,24,3],
            [24,28,3.2],
            [24,28,3.3],
            [24,32,3.3],
            //6[4,32,3.2],
            [24,32,3],
            [24,36,3.2],
            [24,36,3.3],
            [24,40,3.3],
            //[4,40,3.2],
            [24,40,3],
            [24,44,3.2],
            [24,44,3.3],
            [24,48,3.3],
            // [4,48,3.2],
            [24,48,3],
            [24,48,3.1],
            [28,4,3.1],
            [28,4,3.2],
            [28,4,3.3],
            [28,8,3.0],
            [28,12,3.2],
            [28,12,3.3],
            [28,16,3.3],
            //64,16,3.2],
            [28,16,3],
            [28,20,3.2],
            [28,20,3.3],
            [28,24,3.3],
            //6[4,24,3.2],
            [28,24,3],
            [28,28,3.2],
            [28,28,3.3],
            [28,32,3.3],
            //6[4,32,3.2],
            [28,32,3],
            [28,36,3.2],
            [28,36,3.3],
            [28,40,3.3],
            //[4,40,3.2],
            [28,40,3],
            [28,44,3.2],
            [28,44,3.3],
            [28,48,3.3],
            // [4,48,3.2],
            [28,48,3],
            [28,48,3.1],
            [32,4,3.1],
            [32,4,3.2],
            [32,4,3.3],
            [32,8,3.0],
            [32,12,3.2],
            [32,12,3.3],
            [32,16,3.3],
            //64,16,3.2],
            [32,16,3],
            [32,20,3.2],
            [32,20,3.3],
            [32,24,3.3],
            //6[4,24,3.2],
            [32,24,3],
            [32,28,3.2],
            [32,28,3.3],
            [32,32,3.3],
            //6[4,32,3.2],
            [32,32,3],
            [32,36,3.2],
            [32,36,3.3],
            [32,40,3.3],
            //[4,40,3.2],
            [32,40,3],
            [32,44,3.2],
            [32,44,3.3],
            [32,48,3.3],
            // [4,48,3.2],
            [32,48,3],
            [32,48,3.1],
            [36,4,3.1],
            [36,4,3.2],
            [36,4,3.3],
            [36,8,3.0],
            [36,12,3.2],
            [36,12,3.3],
            [36,16,3.3],
            //64,16,3.2],
            [36,16,3],
            [36,20,3.2],
            [36,20,3.3],
            [36,24,3.3],
            //6[4,24,3.2],
            [36,24,3],
            [36,28,3.2],
            [36,28,3.3],
            [36,32,3.3],
            //6[4,32,3.2],
            [36,32,3],
            [36,36,3.2],
            [36,36,3.3],
            [36,40,3.3],
            //[4,40,3.2],
            [36,40,3],
            [36,44,3.2],
            [36,44,3.3],
            [36,48,3.3],
            // [4,48,3.2],
            [36,48,3],
            [36,48,3.1],
            [40,4,3.1],
            [40,4,3.2],
            [40,4,3.3],
            [40,8,3.0],
            [40,12,3.2],
            [40,12,3.3],
            [40,16,3.3],
            //64,16,3.2],
            [40,16,3],
            [40,20,3.2],
            [40,20,3.3],
            [40,24,3.3],
            //6[4,24,3.2],
            [40,24,3],
            [40,28,3.2],
            [40,28,3.3],
            [40,32,3.3],
            //6[4,32,3.2],
            [40,32,3],
            [40,36,3.2],
            [40,36,3.3],
            [40,40,3.3],
            //[4,40,3.2],
            [40,40,3],
            [40,44,3.2],
            [40,44,3.3],
            [40,48,3.3],
            // [4,48,3.2],
            [40,48,3],
            [40,48,3.1],
            // [8,8,3.1],
            [44,4,3.1],
            [44,4,3.2],
            [44,4,3.3],
            [44,8,3.0],
            [44,12,3.2],
            [44,12,3.3],
            [44,16,3.3],
            //64,16,3.2],
            [44,16,3],
            [44,20,3.2],
            [44,20,3.3],
            [44,24,3.3],
            //6[4,24,3.2],
            [44,24,3],
            [44,28,3.2],
            [44,28,3.3],
            [44,32,3.3],
            //6[4,32,3.2],
            [44,32,3],
            [44,36,3.2],
            [44,36,3.3],
            [44,40,3.3],
            //[4,40,3.2],
            [44,40,3],
            [44,44,3.2],
            [44,44,3.3],
            [44,48,3.3],
            // [4,48,3.2],
            [44,48,3],
            [44,48,3.1],
            // [8,8,3.1],
            [48,4,3.1],
            [48,4,3.2],
            [48,4,3.3],
            [48,8,3.0],
            [48,12,3.2],
            [48,12,3.3],
            [48,16,3.3],
            //64,16,3.2],
            [48,16,3],
            [48,20,3.2],
            [48,20,3.3],
            [48,24,3.3],
            //6[4,24,3.2],
            [48,24,3],
            [48,28,3.2],
            [48,28,3.3],
            [48,32,3.3],
            //6[4,32,3.2],
            [48,32,3],
            [48,36,3.2],
            [48,36,3.3],
            [48,40,3.3],
            //[4,40,3.2],
            [48,40,3],
            [48,44,3.2],
            [48,44,3.3],
            [48,48,3.3],
            // [4,48,3.2],
            [48,48,3],
            [48,48,3.1],
            // [8,8,3.1],
            [52,4,3.1],
            [52,4,3.2],
            [52,4,3.3],
            [52,4,3.0],
            [52,8,3.0],
            [52,12,3.2],
            [52,12,3.3],
            [52,12,3.0],
            [52,16,3.3],
            //64,16,3.2],
            [52,16,3],
            [52,20,3.2],
            [52,20,3.3],
            [52,20,3.0],
            [52,24,3.3],
            //6[4,24,3.2],
            [52,24,3],
            [52,28,3.2],
            [52,28,3.3],
            [52,28,3.0],
            [52,32,3.3],
            //6[4,32,3.2],
            [52,32,3],
            [52,36,3.2],
            [52,36,3.0],
            [52,36,3.3],
            [52,40,3.3],
            //[4,40,3.2],
            [52,40,3],
            [52,44,3.2],
            [52,44,3.3],
            [52,44,3.0],
            [52,48,3.3],
            // [4,48,3.2],
            [52,48,3],
            [52,48,3.1],
            // [8,8,3.1],
            
             //[12,8,3.1],

            [6,2,4.2],
            [2,6,4.2],
            [10,10,4.2],
            [6,14,4.2],
            [2,18,4.2],
            [10,22,4.2],
            [6,26,4.2],
            [2,30,4.2],
            [10,34,4.2],
            [6,38,4.2],
            [2,42,4.2],
            [10,46,4.2],
            [6,50,4.2],

            [2,10,4.3],
            [6,6,4.3],
            [10,6,4.3],
            [14,10,4.3],
            [18,10,4.3],
            [22,6,4.3],
            [26,6,4.3],
            [30,10,4.3],
            [34,10,4.3],
            [38,6,4.3],
            [42,6,4.3],
            [46,10,4.3],
            [50,10,4.3],
            [54,6,4.3],
          
            //[14,10,2.1],

            // goal
            [55,51,1,-1]
        ]
    ]
]

window.addEventListener("load", function () {
    //Handle when the whole page finishes loading
    //Use this to "set up" the initial state of things;
    //Often, this includes populating the actorList.
    // A sample:
    onStart();
});
function onStart() {
    loadRoom(5);
}
window.addEventListener("click", function (event) {
    //Handle click events
    //Get position of click on canvas: event.offsetX, event.offsetY
    if (!playing) {
        // shiftX = Math.min((window.innerWidth - 20)/3,(window.innerHeight - 20)/3);
        size = Math.floor(Math.min((window.innerWidth - 20)/3,(window.innerHeight - 20)/3));
        shiftX = Math.floor((window.innerWidth - 20)/2 - size/2);
        shiftY = Math.floor((window.innerHeight - 20)/2 - size/2);
        if (event.offsetX > shiftX && event.offsetX < shiftX + 3 * size / 3 && event.offsetY > shiftY && event.offsetY < shiftY + 3 * size / 3) {
            console.log('hi');
            
            isStarting = 1;
        }
        audio.play();
    }
       
});

audio.addEventListener('ended', function() {
    this.currentTime = 0;
    this.play();
});

function createEnemy(x,y,type){
    if (type==-1){
        for (var i=0;i<GRID_WIDTH;i++){
            for (var j=0;j<GRID_HEIGHT;j++){
                if (j==0||i==0||j==GRID_HEIGHT-1||i==GRID_WIDTH-1){
                    voyd = new Voyd(i,j);
                    enemyList.addActor(voyd)
                }
            }-2
        }
    }
    if (type==0){
        wall = new Wall(x,y);
        grid.blocked[x][y]=1;

        enemyList.addActor(wall)
    }
    if (type==0.5){
        wall = new WalkingWall(x,y);
        enemyList.addActor(wall)
    }
    if (type==1){
        goal = new Goal(x,y);
        enemyList.addActor(goal)
    }
    if (type>=2 && type<3){
        chicken = new WalkingEnemy(x,y,Math.round((type-2)*10));
        enemyList.addActor(chicken)
    }
    if (type>=3 && type<4) {
        //laser = new LaserWall(x,y);
        laser = new LaserWall(x,y,Math.round((type-3)*10));
       // console.log('hi')
        enemyList.addActor(laser);
    }
    if (type>=4 && type<5){
        //console.log('hi');
        chicken = new WalkingEnemy(x,y,Math.round((type-4)*10));
        chicken.turnAmount = 2;
        enemyList.addActor(chicken)
    }
}

function loadRoom(room) {
    
    curRoom = room;
    player.x = rooms[room][0];
    player.y = rooms[room][1];
    player.isDead = 0;
    GRID_WIDTH = rooms[room][2];
    GRID_HEIGHT = rooms[room][3];
    actorList.removeAllActors();
    enemyList.removeAllActors();
    grid.onRoomLoad();
    for (const thing of rooms[room][4]){
        if (thing.length === 4) { // it means it's a goal and has a specified destination
            goal = new Goal(thing[0], thing[1], thing[3]);
            enemyList.addActor(goal);
        } else {
            createEnemy(thing[0], thing[1], thing[2])
        }
    }
    
}
document.addEventListener("keydown", function (event) {

    if (event.key === leftKey || event.key === "ArrowLeft") {
        player.move(-1,0); 
        moves++;
    }
    if (event.key === rightKey || event.key === "ArrowRight") {
        player.move(1,0);
        moves++;

    }
    if (event.key === upKey || event.key === "ArrowUp") {
        player.move(0,-1);
        moves++;

    }
    if (event.key === downKey || event.key === "ArrowDown") {
        player.move(0,1);
        moves++;

    }
    if (event.key === "r") {
        loadRoom(curRoom);
    }
    if (event.key === "o") {
        isFlashing = 1-isFlashing;
    
    }
    if (event.key === "p") {
        player.move(0,0);
        moves++;

    }
    if (event.key === ".") {
        audio.volume += 0.01;
    }
    if (event.key === ",") {
        audio.volume -= 0.01;
    }
    if (event.key === "/") {
        songNum += 1
        if (songNum == 3) {
            songNum = 1
        }
        audio.src = "music/" + songNum + ".mp3";
        //console.log(audio.src);
        audio.play();
    }
    
});
document.addEventListener("keyup", function (event) {
    
});